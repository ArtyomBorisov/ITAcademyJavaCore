package home_work_1;

public class Operators2 {
    public static void main(String[] args) {
        int a = 8;
        int b = 2;
        int c;

        c = 5 + 2 / 8;
        System.out.println(c); // сначала деление (2/8 = 0.25), потом сложение (5+0.25=5.25), но т.к. "c" int-овое, выводится в результат только целая часть, т.е. 5

        c = (5 + 2) / 8;
        System.out.println(c); // сначала сложение, т.к. оно в скобках (5+2=7), потом деление 7/8 = 0.875, но т.к. "c" int-овое, выводится в результат только целая часть, т.е. 0

        c =(5 + b++) / 8;
        System.out.println(c); // сначала сложение, т.к. оно в скобках (5+2=7), потом b увеличивается на 1 (b=3, т.к. это пост инкремент), потом деление 7/8 = 0.875, и результат int-овый = 0

        a = 8; b = 2;
        c = (5 + b++) / --a;
        System.out.println(c); // сначала сложение (5+2=7), потом b=b+1=3, потом a=a-1=7 (т.к. предекремент), потом деление 7/7=1 и результат 1

        a = 8; b = 2;
        c = (5 * 2 >> b++) / --a;
        System.out.println(c); /* сначала умножение 5*2=10, потом сдвиг на 2 бита вправо (число 10 в двоичной системе равно 1010, сдвигаем на 2 бита, получаем 0010, что соответствует 2 в десятичной системе),
        потом а=а-1=7, потом деление 2/7, и целая часть выводится в результат, получается 0*/

        a = 8; b = 2;
        c = (5 + 7 > 20 ? 68 : 22 * 2 >> b++) / --a;
        System.out.println(c); /* в условном операторе сначала считаем выражение до вопроса, сначала складываем 5 и 7, потом сравниваем с правой частью 12>20, ответ false, значит выбирается значение,
        которое стоит после двоеточия, там сначала умножение 22*2=44, потом сдвиг на 2 бита вправо (из 101100 получаем 1011, что равно 11 по десятичной системе), потом b=b+1=3, потом а=8-1=7,
        потом деление 11/7 и частное от деление равняется 1, это и есть результат*/

        /*a = 8; b = 2;
        c = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> b++) / --a;
        System.out.println(c);*/ /*  если раскомментировать эту часть кода, будет ошибка выполнения программы, т.к. в условном операторе в части if true (после вопроса до двоеточия) идет сравнение,
        которое выдает результат boolean, а в части if false (после двоеточия) идет расчет, который выдаёт численный результат, а значения if могут быть или оба boolean, или оба численные*/

        boolean d = 6 - 2 > 3 && 12 * 12 <= 119;
        System.out.println(d); // сначала сравниваем 6 - 2 > 3, 4 > 2, это true, потом 12 * 12 <= 119, 144 <= 119, это false, а в результат идет false, т.к. оператор И (&&) выводит true, если оба операнда равны true

        d = true && false;
        System.out.println(d); // результат false, т.к. оператор И (&&) выводит true, если оба операнда равны true
    }
}
